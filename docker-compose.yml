services:
  chromadb:
    image: chromadb/chroma:latest
    container_name: nuclei_chromadb
    ports:
      - "${CHROMADB_EXTERNAL_PORT}:${CHROMADB_PORT}"
    environment:
      - CHROMA_SERVER_AUTHN_CREDENTIALS_FILE=${CHROMA_SERVER_AUTHN_CREDENTIALS_FILE}
      - CHROMA_SERVER_AUTHN_PROVIDER=${CHROMA_SERVER_AUTHN_PROVIDER}
      - ANONYMIZED_TELEMETRY=${ANONYMIZED_TELEMETRY}
      - IS_PERSISTENT=${IS_PERSISTENT}
      - PERSIST_DIRECTORY=${PERSIST_DIRECTORY}
    volumes:
      - chromadb_data:/chroma/chroma
      - ./config/chromadb:/chroma/config
    networks:
      - nuclei_network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:${CHROMADB_PORT}/api/v1/heartbeat",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nuclei_agent_api
    ports:
      - "${API_EXTERNAL_PORT}:${API_PORT}"
    environment:
      # App Configuration
      - APP_NAME=${APP_NAME}
      - APP_VERSION=${APP_VERSION}
      - APP_DEBUG=${APP_DEBUG}
      - APP_HOST=${API_HOST}
      - APP_PORT=${API_PORT}
      # Vector Database Configuration
      - VECTOR_DB_HOST=${CHROMADB_HOST}
      - VECTOR_DB_PORT=${CHROMADB_PORT}
      - VECTOR_DB_MODE=${VECTOR_DB_MODE}
      - VECTOR_DB_TYPE=${VECTOR_DB_TYPE}
      - VECTOR_DB_COLLECTION_NAME=${VECTOR_DB_COLLECTION_NAME}
      - VECTOR_DB_EMBEDDING_MODEL=${VECTOR_DB_EMBEDDING_MODEL}
      - VECTOR_DB_CHUNK_SIZE=${VECTOR_DB_CHUNK_SIZE}
      - VECTOR_DB_CHUNK_OVERLAP=${VECTOR_DB_CHUNK_OVERLAP}
      # LLM Configuration
      - LLM_PROVIDER=${LLM_PROVIDER}
      - LLM_MODEL=${LLM_MODEL}
      - LLM_TEMPERATURE=${LLM_TEMPERATURE}
      - LLM_MAX_TOKENS=${LLM_MAX_TOKENS}
      - LLM_TIMEOUT=${LLM_TIMEOUT}
      # API Keys
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      # Nuclei Configuration
      - NUCLEI_BINARY_PATH=${NUCLEI_BINARY_PATH}
      - NUCLEI_TIMEOUT=${NUCLEI_TIMEOUT}
      - NUCLEI_VALIDATE_ARGS=${NUCLEI_VALIDATE_ARGS}
      - NUCLEI_TEMPLATES_DIR=${NUCLEI_TEMPLATES_DIR}
      # RAG Configuration
      - RAG_MAX_RETRIEVED_DOCS=${RAG_MAX_RETRIEVED_DOCS}
      - RAG_SIMILARITY_THRESHOLD=${RAG_SIMILARITY_THRESHOLD}
      - RAG_SEARCH_TYPE=${RAG_SEARCH_TYPE}
      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - LOG_FILE_PATH=${LOG_FILE_PATH}
      - LOG_MAX_BYTES=${LOG_MAX_BYTES}
      - LOG_BACKUP_COUNT=${LOG_BACKUP_COUNT}
      # Security Configuration
      - RATE_LIMIT_REQUESTS_PER_MINUTE=${RATE_LIMIT_REQUESTS_PER_MINUTE}
      - RATE_LIMIT_BURST_SIZE=${RATE_LIMIT_BURST_SIZE}
      - MAX_PROMPT_LENGTH=${MAX_PROMPT_LENGTH}
      - ALLOWED_FILE_TYPES=${ALLOWED_FILE_TYPES}
      # Performance Configuration
      - MAX_CONCURRENT_REQUESTS=${MAX_CONCURRENT_REQUESTS}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT}
      - CACHE_TTL=${CACHE_TTL}
      # Template Generation Configuration
      - TEMPLATE_MAX_RETRIES=${TEMPLATE_MAX_RETRIES}
      - TEMPLATE_VALIDATION_REQUIRED=${TEMPLATE_VALIDATION_REQUIRED}
      - TEMPLATE_OUTPUT_FORMAT=${TEMPLATE_OUTPUT_FORMAT}
      - TEMPLATE_INCLUDE_METADATA=${TEMPLATE_INCLUDE_METADATA}
      # Python Configuration
      - PYTHONPATH=${PYTHONPATH}
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED}
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - ./rag_data:/app/rag_data
      - ./templates:/app/templates
    networks:
      - nuclei_network
    depends_on:
      chromadb:
        condition: service_healthy
    restart: unless-stopped
    command:
      [
        "uvicorn",
        "app.main:app",
        "--host",
        "${API_HOST}",
        "--port",
        "${API_PORT}",
        "--workers",
        "${API_WORKERS}",
      ]

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nuclei_agent_scheduler
    environment:
      # Vector Database Configuration
      - VECTOR_DB_HOST=${CHROMADB_HOST}
      - VECTOR_DB_PORT=${CHROMADB_PORT}
      - VECTOR_DB_MODE=${VECTOR_DB_MODE}
      - VECTOR_DB_TYPE=${VECTOR_DB_TYPE}
      - VECTOR_DB_COLLECTION_NAME=${VECTOR_DB_COLLECTION_NAME}
      - VECTOR_DB_EMBEDDING_MODEL=${VECTOR_DB_EMBEDDING_MODEL}
      - VECTOR_DB_CHUNK_SIZE=${VECTOR_DB_CHUNK_SIZE}
      - VECTOR_DB_CHUNK_OVERLAP=${VECTOR_DB_CHUNK_OVERLAP}
      # LLM Configuration
      - LLM_PROVIDER=${LLM_PROVIDER}
      - LLM_MODEL=${LLM_MODEL}
      - LLM_TEMPERATURE=${LLM_TEMPERATURE}
      - LLM_MAX_TOKENS=${LLM_MAX_TOKENS}
      - LLM_TIMEOUT=${LLM_TIMEOUT}
      # API Keys
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      # Nuclei Configuration
      - NUCLEI_TEMPLATES_DIR=${NUCLEI_TEMPLATES_DIR}
      - NUCLEI_TIMEOUT=${NUCLEI_TIMEOUT}
      - NUCLEI_VALIDATE_ARGS=${NUCLEI_VALIDATE_ARGS}
      # RAG Configuration
      - RAG_MAX_RETRIEVED_DOCS=${RAG_MAX_RETRIEVED_DOCS}
      - RAG_SIMILARITY_THRESHOLD=${RAG_SIMILARITY_THRESHOLD}
      - RAG_SEARCH_TYPE=${RAG_SEARCH_TYPE}
      # Template Auto-Update Configuration
      - AUTO_UPDATE_TEMPLATE_NUCLEI=${AUTO_UPDATE_TEMPLATE_NUCLEI}
      - TIME_UPDATE_TEMPLATE=${TIME_UPDATE_TEMPLATE}
      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - LOG_FILE_PATH=${LOG_FILE_PATH}
      - LOG_MAX_BYTES=${LOG_MAX_BYTES}
      - LOG_BACKUP_COUNT=${LOG_BACKUP_COUNT}
      # Python Configuration
      - PYTHONPATH=${PYTHONPATH}
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED}
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - ./rag_data:/app/rag_data
      - ./templates:/app/templates
    networks:
      - nuclei_network
    depends_on:
      chromadb:
        condition: service_healthy
    restart: unless-stopped
    command: ["python", "-m", "app.core.scheduler"]

volumes:
  chromadb_data:
    driver: local

networks:
  nuclei_network:
    driver: bridge
