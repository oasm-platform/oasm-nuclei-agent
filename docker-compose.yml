services:
  chromadb:
    image: chromadb/chroma:latest
    container_name: nuclei_chromadb
    ports:
      - "${CHROMADB_EXTERNAL_PORT}:${CHROMADB_PORT}"
    env_file:
      - .env
    volumes:
      - chromadb_data:/chroma/chroma
    networks:
      - nuclei_network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:${CHROMADB_PORT}/api/v1/heartbeat",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nuclei_template_gen
    ports:
      - "${API_EXTERNAL_PORT}:${API_PORT}"
    env_file:
      - .env
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - ./rag_data:/app/rag_data
      - ./templates:/app/templates
    networks:
      - nuclei_network
    depends_on:
      chromadb:
        condition: service_healthy
    restart: unless-stopped
    command:
      [
        "uvicorn",
        "app.main:app",
        "--host",
        "${API_HOST}",
        "--port",
        "${API_PORT}",
        "--workers",
        "${API_WORKERS}",
      ]

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nuclei_template_scheduler
    env_file:
      - .env

    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - ./rag_data:/app/rag_data
      - ./templates:/app/templates
    networks:
      - nuclei_network
    depends_on:
      chromadb:
        condition: service_healthy
    restart: unless-stopped
    command: ["python", "-m", "app.scheduler"]

volumes:
  chromadb_data:
    driver: local

networks:
  nuclei_network:
    driver: bridge
